name: Pages Pipeline

on:
  push:
    branches: [master]

jobs:
  build-artifact:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Start Ubuntu MySQL
        run: sudo systemctl start mysql.service
      - name: Build with Gradle
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: build
          gradle-version: 6.4.1
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: build/libs/pages.jar

      - name: build-docker-image
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ${{ secrets.DOCKER_USERNAME }}/pages
          tags: persist
  deploy-image-to-pks:
    needs: build-artifact
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Install Pivnet & PKS
        run: |
          sudo apt-get update
          wget -O pivnet github.com/pivotal-cf/pivnet-cli/releases/download/v0.0.55/pivnet-linux-amd64-0.0.55 && chmod +x pivnet && sudo mv pivnet /usr/local/bin
          pivnet login --api-token=${{ secrets.PIV_TOKEN }}
          pivnet download-product-files --product-slug='pivotal-container-service' --release-version='1.7.0' --product-file-id=646536
          sudo mv pks-linux-amd64-1.7.0-build.483 pks
          chmod +x pks
          sudo mv pks /usr/local/bin/
      - name: Install Kubectl
        run: |
          pivnet download-product-files --product-slug='pivotal-container-service' --release-version='1.7.0' --product-file-id=633728
          sudo mv  kubectl-linux-amd64-1.16.7 kubectl
          sudo mv kubectl /usr/local/bin/
      - name: PKS Login
        run: |
          pks login -a ${{ secrets.PKS_API }}  ${{ secrets.PKS_CLUSTER }} -u ${{ secrets.PKS_USERNAME }} -k -p ${{ secrets.PKS_PASSWORD }}
          pks get-credentials pks-workshop
          kubectl apply -f deployment/pages-namespace.yaml

          kubectl apply -f deployment/mysql-pv.yaml
          kubectl apply -f deployment/mysql-secret.yaml
          kubectl apply -f deployment/mysql-deployment.yaml
          kubectl apply -f deployment/pages-config.yaml
          kubectl apply -f deployment/pages-service.yaml
          kubectl delete -f deployment/pages-deployment.yaml
          kubectl apply -f deployment/pages-deployment.yaml





    #1 - Install Pivnet
    #2 - Install PKS CLI
    #3 - Install kubectl
    #4 - Login to pks
    #5 - Set the kubectl context to target pks cluster
    #6 - Create ConfigMap/Secrets
    #7 - Create Service
    #8-  Create Deployment